/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}
apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs.addAll(['--release', '8']) // Countermeasures to JDK-8212636

version = currentVersion

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit jupiter test framework.
    implementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    implementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'

    // https://mvnrepository.com/artifact/org.dbunit/dbunit
    implementation 'org.dbunit:dbunit:2.7.2'
    
    // https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation 'org.apache.poi:poi:5.1.0'

    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml-full
    implementation 'org.apache.poi:poi-ooxml:5.1.0'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-csv:1.9.0'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'

    // https://mvnrepository.com/artifact/org.springframework/spring-context
    implementation 'org.springframework:spring-context:5.3.13'

    // https://mvnrepository.com/artifact/org.springframework/spring-jdbc
    implementation 'org.springframework:spring-jdbc:5.3.13'

    // https://mvnrepository.com/artifact/org.springframework/spring-test
    implementation 'org.springframework:spring-test:5.3.13'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jdbc
    testImplementation 'org.springframework.boot:spring-boot-starter-jdbc:2.6.1'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.1'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.8.2'

    // https://mvnrepository.com/artifact/com.h2database/h2
    testRuntimeOnly 'com.h2database:h2:2.0.202'

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    testRuntimeOnly 'mysql:mysql-connector-java:8.0.29'

    // https://mvnrepository.com/artifact/org.hsqldb/hsqldb
    testRuntimeOnly 'org.hsqldb:hsqldb:2.6.1:jdk8'

    // https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc
    testRuntimeOnly 'com.microsoft.sqlserver:mssql-jdbc:11.2.0.jre8'

    // https://mvnrepository.com/artifact/com.ibm.db2/jcc
    testRuntimeOnly files('D:/eclipse/jdbcs/db2jcc4.jar')

    // https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc8
    testRuntimeOnly 'com.oracle.database.jdbc:ojdbc8:21.6.0.0.1'

    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    testRuntimeOnly 'org.postgresql:postgresql:42.4.0'
}

eclipse {
    project {
        // プロジェクトにgradleネーチャーを追加
        buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
        natures 'org.eclipse.buildship.core.gradleprojectnature'
    }
    jdt.file {
        withProperties { properties ->
            properties.put('eclipse.preferences.version', '1')

            def formatter = new XmlSlurper().parse(file('.ide/eclipse/formatter.xml'))
            formatter.profile.setting.each {
                properties.put(it.@id as String, it.@value as String)
            }
        }
    }
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

// eclipseタスクの後処理
tasks.eclipse.doLast {
    copy {
        from '.ide/eclipse/settings'
        into '.settings'
    }
}

cleanEclipse {
    delete 'bin'
    delete '.settings'
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        events = ['started', 'skipped', 'passed', 'failed']
        exceptionFormat = 'full'
    }
}